ldap_domain: 'example.org'
ldap_top_organization: 'example'
ldap_data_password: 'test'
ldap_config_password: 'test'
ldap_hold_package: no
ldap_certificate_file: '/etc/ldap/cert.pem'
ldap_certificate_key_file: '/etc/ldap/privkey.pem'
ldap_certificate_chain_file: '/etc/ldap/chain.pem'
ldap_access_rules_set: yes
ldap_access_rules_start:
  # value are in YAML folded style (newlines are replaced with spaces) with chomping (no newline at the end)
  - >-
    to attrs=userPassword
    by self write
    by anonymous auth
    by * none
  - >-
    to attrs=shadowLastChange
    by self write
    by * read
ldap_access_rules_additional: []
ldap_access_rules_end:
  - >-
    to *
    by self read
    by * break
  - >-
    to *
    by users search
    by * break
ldap_size_limit: unlimited
ldap_master_replica: no
ldap_replication_password: 'test'
ldap_slave_replica: no
ldap_master_url: "ldaps://{{ inventory_hostname }}"
#ldap_users:
#  - user: proxy
#    password: test
#    description: "user for IdP Proxy"
ldap_users: []

# whether to configure memberOf overlay for adding the attribute memberOf to group members
ldap_memberOf_overlay: no

# whether to configure strong password hashing
ldap_strong_password_hashing: no

# whether to hack the standard schema to allow empty groups
ldap_allow_empty_groups: no

# whether to install Server Side Sorting and Virtual List View overlay
ldap_sssvlv_overlay: no

# whether to install GSSAPI pass-through authentication
ldap_pass_through_authentication: no

ldap_basedn: '{{ "dc=" + ldap_domain.split(".") | join(",dc=") }}'
ldap_data_admin_dn: '{{ "cn=admin," + ldap_basedn }}'

# maximum size of database (object olcDatabase={1}mdb,cn=config attribute olcDbMaxSize) in bytes
# default is 1 GiB
ldap_mdb1_olcDbMaxSize: 1073741824
